{"version":3,"sources":["images/Heart.png","images/Star.png","images/Bow.png","images/PrincessLeia.png","images/Yoda.png","images/Chewbacca.png","images/DeathStar.png","components/Film/Film.js","components/CategoryCard/CategoryCard.js","components/CategoriesContainer/CategoriesContainer.js","components/NoMatch/NoMatch.js","components/Fetch/Fetch.js","apiCalls.js","components/App/App.js","index.js"],"names":["module","exports","Film","componentDidMount","randomNumber","Math","floor","random","fetch","then","response","json","data","setState","film","results","state","className","this","title","release_date","opening_crawl","Component","CategoryCard","props","name","type","homeworld","species","population","model","vehicle_class","passengers","terrain","climate","residents","toggleFavorite","src","Star","alt","height","map","resident","onClick","Heart","CategoriesContainer","countFavorites","displayCards","card","index","key","favoriteCount","Bow","NoMatch","Fetch","favorites","some","item","nonMatchingElements","filter","foundElement","find","length","checkLoading","people","vehicles","planets","console","log","ok","Error","catch","error","message","data1","fetchSpecies","data2","fetchPlanets","result","fetchResidents","promises","person","Promise","all","planet","array","forEach","push","to","PrincessLeia","Chewbacca","DeathStar","Yoda","exact","path","render","component","App","setTimeout","isLoading","bind","router","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c049a3d4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Heart.6c00b899.png\";","module.exports = __webpack_public_path__ + \"static/media/Star.3373df6b.png\";","module.exports = __webpack_public_path__ + \"static/media/Bow.f2540fbc.png\";","module.exports = __webpack_public_path__ + \"static/media/PrincessLeia.0ff427b7.png\";","module.exports = __webpack_public_path__ + \"static/media/Yoda.5bd4866e.png\";","module.exports = __webpack_public_path__ + \"static/media/Chewbacca.d8508161.png\";","module.exports = __webpack_public_path__ + \"static/media/DeathStar.8fe72e1f.png\";","import React, { Component } from 'react';\nimport './Film.css'\n\nclass Film extends Component {\n    constructor() {\n        super()\n        this.state = {\n            film: []\n        }\n    }\n\n    componentDidMount = () => {\n        let randomNumber = Math.floor(Math.random() * 7)\n        fetch('https://swapi.co/api/films')\n            .then(response => response.json())\n            .then(data => {\n                return data;\n            })\n            .then(data => this.setState({ film: data.results[randomNumber] }))\n\n    }\n    render() {\n        return (\n            <aside className=\"filmContainer\">\n                <div className=\"crawl\">\n                <h1>{this.state.film.title}</h1>\n                <p>{this.state.film.release_date}</p>\n                <p>{this.state.film.opening_crawl}</p>\n                </div>\n            </aside>\n        )\n    }\n}\n\nexport default Film;","import React from 'react';\nimport '../CategoryCard/CategoryCard.css';\nimport PropTypes from 'prop-types';\nimport '../CategoryCard/CategoryCard.css';\nimport Star from '../../images/Star.png';\nimport Heart from '../../images/Heart.png'\n\nconst CategoryCard = ( props ) => {\n  const { name, type } = props;\n  const { homeworld, species, population} = props;\n  const { model, vehicle_class, passengers } = props;\n  const { terrain, climate, residents } = props;\n  const { toggleFavorite } = props;\n    return (\n      <div className=\"card\">\n        <header>\n          <h3 className=\"cardTitle\"><img className=\"star\" src={Star} alt=\"star\" height=\"21\"/>{name}</h3>\n        </header>\n        <div className=\"list-container\">\n          <ul className=\"cardList\">\n            {species && <li>Species: {species}</li>}\n            {homeworld && <li>Homeworld: {homeworld}</li>}\n            {population && <li>Population: {population}</li>}\n\n            {model && <li>Model: {model}</li>}\n            {vehicle_class && <li>Class: {vehicle_class}</li>}\n            {passengers && <li>Passengers: {passengers}</li>}\n\n            {terrain && <li>Terrain: {terrain}</li>}\n            {climate && <li>Climate: {climate}</li>}\n            {residents && <ul>Residents: {(residents.map(resident => {\n              return <li>{resident}</li>\n              }))}</ul>}\n          </ul>\n          </div>\n        <footer>\n          <button className=\"cardButton\" onClick={() => toggleFavorite(name, type)}><img className=\"faveHeart\" src={Heart} alt=\"heart\"/>FAV</button>\n        </footer>\n      </div>\n    )\n}\n\nexport default CategoryCard;\n\nCategoryCard.propTypes = {\n  climate: PropTypes.string,\n  homeworld: PropTypes.string,\n  model: PropTypes.string,\n  name: PropTypes.string,\n  passenger: PropTypes.number,\n  populations: PropTypes.number,\n  residents: PropTypes.arrayOf(PropTypes.string),\n  species: PropTypes.string,\n  terrain: PropTypes.string,\n  toggleFavorite: PropTypes.func,\n  type: PropTypes.string,\n  vehicle_class: PropTypes.string\n}","import React from 'react';\nimport '../CategoriesContainer/CategoriesContainer.css';\nimport CategoryCard from '../CategoryCard/CategoryCard';\nimport PropTypes from 'prop-types';\nimport Bow from '../../images/Bow.png'\nimport Heart from '../../images/Heart.png'\n\nconst CategoriesContainer = ({ data, toggleFavorite, countFavorites }) => {\n  const displayCards = data.map((card, index) => <CategoryCard \n    key={card.name + index}\n    type={card.type}\n    name={card.name}\n    homeworld= {card.homeworld}\n    species={card.species}\n    population={card.population}\n    model={card.model}\n    vehicle_class={card.vehicle_class}\n    passengers={card.passengers}\n    terrain={card.terrain}\n    climate={card.climate}\n    residents={card.resident}\n    toggleFavorite={toggleFavorite}\n    />);\n\n    const favoriteCount = countFavorites();\n\n    return (\n      <div className=\"bow\">\n          <img className=\"pinkbow\" src={Bow} alt=\"\"/>\n        <h1>Hello Star Wars</h1>\n        <header className=\"helloHeader\">\n          <h3><img className=\"fav-heart\" src={Heart} alt= \"\"/> Faves: {favoriteCount}</h3>\n          {(countFavorites() <1) && <h3 className=\"pick-favorites\"><img className=\"fav-heart\" src={Heart} alt= \"\"/> Select Your Favorites!</h3>}\n          <p></p>\n        </header>\n        <article className= \"categoriesContainer\">\n          {displayCards}\n        </article>\n      </div>\n    )\n}\n\nexport default CategoriesContainer;\n\nCategoriesContainer.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object),\n  toggleFavorite: PropTypes.func,\n  countFavorites: PropTypes.func\n}","import React, {Component} from 'react';\n\n\nclass NoMatch extends Component {\n    render() {\n        return(\n            <div> 404 page</div>\n        )\n    }\n}\n\nexport default NoMatch;","import React, {Component} from 'react';\nimport CategoriesContainer from '../CategoriesContainer/CategoriesContainer';\nimport { BrowserRouter as Router, Route, NavLink, Switch } from 'react-router-dom';\nimport './Fetch.css';\nimport PrincessLeia from '../../images/PrincessLeia.png';\nimport Yoda from '../../images/Yoda.png';\nimport Chewbacca from '../../images/Chewbacca.png';\nimport DeathStar from '../../images/DeathStar.png';\nimport { getVehicles, getPlanets, getPeople} from '../../apiCalls';\n\nimport NoMatch from '../NoMatch/NoMatch';\n\nclass Fetch extends Component {\n  constructor(props) {\n    super(props)\n    // eslint-disable-next-line\n    const {checkLoading} = props;\n    this.state = {\n      people: [],\n      vehicles : [],\n      planets: [],\n      favorites: []\n    }\n  }\n  \n  componentDidMount() {\n    getPeople()\n    .then(data1 => this.fetchSpecies(data1))\n    .then(data2 => this.fetchPlanets(data2))\n    .then(result => {\n      this.setState({ people: result });\n      this.checkLoading()})\n    .catch(error => console.log(error));\n\n    getPlanets()\n    .then(data => this.fetchResidents(data.results))\n      .then(result => this.setState({ planets: result }))\n    .catch(error => console.log(error))\n\n    getVehicles()\n    .then(response => response.results.map(item => {\n      return {...item, type: \"vehicles\"}}))\n    .then(result => this.setState({vehicles : result}))\n    .catch(error => console.log(error))\n  }\n\n  fetchSpecies(people) {\n    const promises = people.results.map(person => {\n      return fetch(person.species)\n      .then(response => response.json())\n      .then(data => ({...person, species: data.name, type: \"people\"}))\n      .catch(error => console.log(error))\n    })\n    return Promise.all(promises)\n  }\n\n  fetchPlanets(people) {\n    const promises = people.map(person => {\n      return fetch(person.homeworld)\n        .then(response => response.json())\n        .then(data => ({...person, homeworld: data.name, population: data.population}))\n        .catch(error => console.log(error))\n    });\n    return Promise.all(promises);\n  }\n\n  fetchResidents(data) {\n    const planets = data.map(planet => {\n      let array = [];\n      planet.residents.forEach(resident => {\n        return fetch(resident)\n        .then(response => response.json())\n        .then(data => array.push(data.name))\n      });\n\n      return {\n        name: planet.name,\n        terrain: planet.terrain,\n        population: planet.population,\n        climate: planet.climate,\n        resident: array,\n        type: \"planets\"\n      };\n    });\n    return planets;\n  }\n\n  toggleFavorite = (name, type) => {\n    if(!this.state.favorites.some(item => item.name === name)) {\n      const {favorites} = this.state;\n      const foundElement = this.state[type].find(item => item.name === name)\n      this.setState({favorites: [...favorites, foundElement]})\n    } else {\n      const nonMatchingElements = this.state.favorites.filter(item => item.name !== name)\n      this.setState({favorites: nonMatchingElements})\n    }\n  }\n\n  countFavorites = () => {\n    return this.state.favorites.length;\n  }\n\n  render() {\n    return (\n      <>\n        <Router>\n          <nav className=\"navContainer\">\n            <NavLink to=\"/people\" className=\"nav\"><img className=\"buttonImages\" src={PrincessLeia} alt='Princess Leia' /><button>PEOPLE</button></NavLink>\n            <NavLink to=\"/vehicles\" className=\"nav\"><img className=\"buttonImages\" src={Chewbacca} alt='Chewbacca' /><button>VEHICLES</button></NavLink>\n            <NavLink to=\"/planets\" className=\"nav\"><img className=\"buttonImages\" src={DeathStar} alt='DeathStar' /><button>PLANETS</button></NavLink>\n            <NavLink to='/favorites' className=\"nav\"><img className=\"buttonImages\" src={Yoda} alt='Yoda' /><button>FAVORITES</button></NavLink>\n          </nav>\n          <Switch>\n          <Route exact path='/people' render={() => <CategoriesContainer data={this.state.people} toggleFavorite={this.toggleFavorite} countFavorites={this.countFavorites}/>} />\n          <Route path='/vehicles' render={() => <CategoriesContainer data={this.state.vehicles} toggleFavorite={this.toggleFavorite} countFavorites={this.countFavorites}/>} />\n          <Route path='/planets' render={() => <CategoriesContainer data={this.state.planets} toggleFavorite={this.toggleFavorite} countFavorites={this.countFavorites}/>} />\n          <Route path='/favorites' render={() => <CategoriesContainer data={this.state.favorites} toggleFavorite={this.toggleFavorite} countFavorites={this.countFavorites}/>} />\n          <Route component={NoMatch}/>\n          </Switch>\n        </Router>\n      </>\n    )\n  }\n}\n\nexport default Fetch;\n","export const getVehicles = () => {\n  return fetch('https://swapi.co/api/vehicles/')\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Fetching Error')\n      }\n      return response.json()\n    }).catch(error => {\n      throw Error(error.message);\n    });\n};\n\nexport const getPlanets = () => {\n  return fetch('https://swapi.co/api/planets/')\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Fetching Error')\n      }\n      return response.json()\n    }).catch(error => {\n      throw Error(error.message);\n    });\n};\n\nexport const getPeople = () => {\n  return fetch('https://swapi.co/api/people/')\n  .then(response => {\n    console.log(response)\n    if(!response.ok) {\n      throw Error('Error')\n    } \n    return response.json()\n  })\n  .catch(error => {\n    throw Error(error.message);\n  })\n};","import React, { Component } from 'react';\nimport Film from '../Film/Film';\nimport Fetch from '../Fetch/Fetch';\nimport './App.css';\nimport PropTypes from 'prop-types';\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state= {\n      isLoading: true\n    }\n    this.checkLoading = this.checkLoading.bind(this);\n  }\n\n  checkLoading = () => {\n    setTimeout(() => {\n      this.setState({isLoading: false})\n    }, 5000)\n  }\n\n  render() {\n    return(\n      <>\n        <main className=\"App\">\n          <Fetch checkLoading={this.checkLoading}/>\n          {this.state.isLoading && <Film/>}\n        </main>\n      </>\n    )\n  }\n}\n\nexport default App;\n\nApp.propTypes = {\n  checkLoading: PropTypes.func,\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nconst router = (\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>  \n)\n\nReactDOM.render(router, document.getElementById('root'));\n"],"sourceRoot":""}